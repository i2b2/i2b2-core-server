<?xml version="1.0" encoding="UTF-8"?>
	<!--
		$Id: build.xml,v 1.21 2010/03/22 15:52:46 rk903 Exp $
	-->
	<project basedir="." default="all" name="CRC Cell">

		
		<property name="Project" value="edu.harvard.i2b2.crc" />

		<property file="etc/spring/crc_application_directory.properties" />
		
		<!-- ========== Executable Targets ======================================== -->
		<property name="Name" value="CRC" />
		<import file="../edu.harvard.i2b2.server-common/common_build.xml" />

		<!-- =================================================================== -->
		<!-- 								INIT 								 -->
		<!-- =================================================================== -->
		<target name="init" depends="common_init,common-classpath" description="Prepare for build">
			<path id="classpath">
				<path refid="common-classpath" />
				<pathelement location="${classes}" />
				<pathelement location="../${i2b2CommonProject}/dist/i2b2Common-core.jar" />
			</path>

			<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
				<classpath refid="classpath" />
			</taskdef>

		</target>



		<!-- =================================================================== -->
		<!-- 								CLEAN 								 -->
		<!-- =================================================================== -->
		<target name="clean" depends="common_clean" description="Clean all build products" />


		<!-- =================================================================== -->
		<!-- 								COMMON JAXB GENERATION 				 -->
		<!-- =================================================================== -->
		<target name="jaxb_gen" depends="init" description="Generate JAXB classes for i2b2 and Patient Data messages">

			<xjc extension="true" destdir="${gensrc}" removeOldOutput="no">
				<schema dir="../${i2b2xmlproject}/xsd/hive/pdo_1.1" includes="i2b2_PDO.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/crc/pdo_1.1" includes="CRC_PDO_QRY.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/hive/msg_1.1" includes="i2b2_response.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/hive/msg_1.1" includes="i2b2_result_msg.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY_query_definition.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/crc/psm_1.1" includes="CRC_PSM_QRY_analysis_definition.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/pm_1.1" includes="PM_USER.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/ont_1.1" includes="ONT_RESP.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/ont_1.1" includes="ONT_QRY.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/fr_1.0" includes="FR_QRY.xsd" />
				<schema dir="../${i2b2xmlproject}/xsd/cell/crc/loader_1.1" includes="CRC_UPLOADER_QRY.xsd" />
				<binding dir="." includes="etc/xsd/fr_qry.xjb" />				
				<binding dir="." includes="etc/xsd/crc_loader_qry.xjb" />
				<binding dir="." includes="etc/xsd/i2b2_response.xjb" />
				<binding dir="." includes="etc/xsd/crc_psm_qry.xjb" />
				<binding dir="." includes="etc/xsd/crc_psm_querydefinition.xjb" />
				<binding dir="." includes="etc/xsd/crc_psm_analysisdefinition.xjb" />
				<binding dir="." includes="etc/xsd/i2b2_pm_bindings.xjb" />
				<binding dir="." includes="etc/xsd/crc_ontology_bindings.xjb" />
				<binding dir="." includes="etc/xsd/crc_hive_result.xjb" />
				<binding dir="." includes="etc/xsd/i2b2_pdo.xjb" />
				<binding dir="." includes="etc/xsd/crc_pdo_qry.xjb" />
			</xjc>
		</target>


		<!-- =================================================================== -->
		<!-- 								COMPILE 							 -->
		<!-- =================================================================== -->
		<target name="compile" depends="init,jaxb_gen" description="Compile files without cleaning">
			<mkdir dir="${classes}" />
			<javac destdir="${classes}" optimize="${javac.opt}" debug="true">
				<src path="${src}/server" />
				<src path="${gensrc}" />
				<src path="${src}/test" />			
			<!--	<src path="${src}/test" />  -->
				<classpath refid="classpath" />
			</javac>
		</target>


		<!-- =================================================================== -->
		<!-- 								DIST 								 -->
		<!-- =================================================================== -->
		<target name="dist"  description="package application for distribution/deployment">
			<echo message="${Name}: Creating the archive package!" />
			<antcall target="axis2aar" />
			<antcall target="jar_core" />
			<antcall target="dist-server" />
		</target>
		
		<!-- Axis2 archive file -->
		<target name="axis2aar" depends="compile" description="Create Axis2 archive file">
			<jar compress="true" jarfile="${dist}/${Name}.aar">
				<fileset dir="${classes}">
					<include name="**/**" /> 
					<exclude name="**/datavo/**" />
				<!--	<include name="**/**" /> -->
				<!--	<exclude name="**/datavo/**" />-->
				</fileset>
				<zipfileset dir="${etc}/axis2/" prefix="META-INF" includes="services.xml" />
				<zipfileset dir="../${i2b2CommonProject}/dist/" prefix="lib" includes="*.jar"/>
							
			</jar>
		</target>
		<!-- Jar core file -->
		<target name="jar_core" depends="compile" description="Create CRC core jar">
			<jar compress="true" jarfile="${dist}/${Name}-core.jar">
				<fileset dir="${classes}">
					<include name="**/datavo/**" />
					
					<include name="**/**" />
					<!--
					<include name="**/datavo/**" />
					 <include name="**/**" /> 
					 -->
					</fileset> 
				<zipfileset dir="${etc}/axis2/" prefix="META-INF" includes="services.xml" />
			</jar> 
			</target>

		<!-- =================================================================== -->
		<!-- 								SERVER DIST							 -->
		<!-- =================================================================== -->
		<target name="dist-server"  description="package application for distribution/deployment">
			<echo message="${Name}: Creating the server archive package!" />
			<jar compress="true" jarfile="${dist}/${Name}-Server.jar">
				<fileset dir="${etc}/spring">
					<include name="**" />
				</fileset>
			</jar>
		</target>
		
		<!-- =================================================================== -->
		<!-- 								ALL 								 -->
		<!-- =================================================================== -->
		<target name="all" depends="dist">
		</target>
		
		<!-- =================================================================== -->
		<!-- 								JBOSS DEPLOY 						 -->
		<!-- =================================================================== -->
		<target name="deploy"  description="Deployment step:copy distribution jar files to app server">
				<echo message="${Name}: Copying archive package to app server ${jboss.home}" />
			<copy todir="${jboss.home}/standalone/deployments/${axis2.war.name}/WEB-INF/lib">
				<fileset dir="${dist}">
					<exclude name="**/**.aar" />
					<exclude name="**/*client.jar"/>
				</fileset>
			</copy>
			
			<copy todir="${jboss.home}/standalone/deployments/${axis2.war.name}/WEB-INF/services">
				<fileset dir="${dist}">
					<include name="**/**.aar" />
				</fileset>
			</copy>

			<copy todir="${jboss.home}/standalone/deployments">
				<fileset dir="${etc}/jboss">
				<!--	<exclude name="**/jboss.xml" /> -->
				</fileset>
			</copy>

				<echo message="copying property files to ${edu.harvard.i2b2.crc.applicationdir}"/>
				<copy todir="${edu.harvard.i2b2.crc.applicationdir}">
					<fileset dir="${etc}/spring">
						<exclude name="crc_application_directory.properties" />
					</fileset>
				</copy>
			</target>



		<!-- =================================================================== -->
		<!-- 								JBOSS DEPLOY ARCHIVE ONLY						 -->
		<!-- =================================================================== -->	
		<target name="service_deploy">
			<echo message="${Name}: Copying archive package to app server ${jboss.home}" />
			<copy todir="${jboss.home}/standalone/deployments/${axis2.war.name}/WEB-INF/lib">
				<fileset dir="${dist}">
					<exclude name="**/**.aar" />
					<exclude name="**/*client.jar"/>
				</fileset>
			</copy>
			
			<copy todir="${jboss.home}/standalone/deployments/${axis2.war.name}/WEB-INF/services">
				<fileset dir="${dist}">
					<include name="**/**.aar" />
				</fileset>
			</copy>
		</target>
		
		

		<!-- ==================================================================== -->
		<!-- 								WSDL Sample							  -->
		<!-- ==================================================================== -->
		<target name="axis2_wsdl_sample_aar" depends="compile" description="">
			<jar compress="true" jarfile="${dist}/${Name}_wsdl_sample.aar">
				<fileset dir="${classes}">
					<include name="**/wsdl/**" />
					<include name="**/ws/**" />
				</fileset>
				<zipfileset dir="${src}/sample/resources/" prefix="META-INF" includes="services.xml" />
				<zipfileset dir="${src}/sample/resources/" prefix="META-INF" includes="OntologySoapService.wsdl" />
				<zipfileset dir="../${i2b2CommonProject}/dist/" prefix="lib" includes="*.jar"/>
							
			</jar>
		</target>

		<!-- ==================================================================== -->
		<!-- 								Test Client							  -->
		<!-- ==================================================================== -->
		<target name="run_client" depends="compile" description="To test service, run REST and SOAP client">
			<!-- run rest client -->
			<echo message="Running RESTClient .. " />
			<java classname="edu.harvard.i2b2.ontology.ws.OntologyServiceRESTTest" fork="true" failonerror="true" maxmemory="128m">
				<arg value="-h" />
				<classpath refid="classpath" />
			</java>

			<!-- run soap client 
			<echo message="Running SoapClient .. " />
			<java classname="edu.harvard.i2b2.ontology.ws.wsdl.OntologySoapClient" fork="true" failonerror="true" maxmemory="128m">
				<arg value="-h" />
				<classpath refid="classpath" />
				</java>-->
			
		</target>


		<!-- =================================================================== -->
		<!-- 			RUN JUNIT TESTS AND GENERATE REPORT			 			 -->
		<!-- =================================================================== -->
		<target name="test" depends="compile" description="Compile and run JUnit tests and testcases">
			<echo message="${Name}: Running test cases!" />
			<property name="reports.dir" value="${report}" />

			<!-- run the unit tests -->
			<junit fork="yes" haltonfailure="no" maxmemory="2048M" printsummary="on" errorProperty="test.failed" failureProperty="test.failed" showoutput="false">
				<formatter type="xml" />
				<jvmarg value="-Dtestfiledir=${testfiledir}" />
				<jvmarg value="-Dtesthost=${testhost}" />
				<jvmarg value="-Djava.endorsed.dirs=endorsed_lib" />
				<!--<test name="AllTests" todir="${report.dir}"/>-->
				<batchtest fork="yes" todir="${reports.dir}">
					<fileset dir="${src}/test">
						<include name="**/SetfinderQueryTest.java" /> 
						<exclude name="**/AllTests.java" />
					</fileset>
				</batchtest>
				<classpath>
					<path refid="classpath" />
					<pathelement location="${etc}/spring" />
				</classpath>
			</junit>
			<!-- create the junit test report -->
			<echo message="${Name}: Generating reports!" />
			<junitreport>
				<fileset dir="${reports.dir}">
					<include name="TEST-*.xml" />
				</fileset>
				<report format="frames" todir="${reports.dir}" />
			</junitreport>
			<fail message="Tests failed." if="test.failed" />
		</target>
	</project>

